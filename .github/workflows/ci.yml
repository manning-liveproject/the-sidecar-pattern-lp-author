name: CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    branches: [ main, m1, m2, m3 ]
  pull_request:
    branches: [ main, m1, m2, m3 ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      
    - name: Install apt-get packages
      run: |
        sudo ACCEPT_EULA=Y apt-get update
        sudo ACCEPT_EULA=Y apt-get upgrade
        sudo apt-get install wget git curl software-properties-common build-essential

    - name: Install and run MySQL
      run: |
        sudo apt-get update
        sudo apt-get -y install mysql-server libmysqlclient-dev curl
        sudo service mysql start
        mysql -e "SET GLOBAL max_allowed_packet = 36700160;" -uroot -proot
        mysql -e "SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = WARN;" -uroot -proot
        mysql -e "SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = ON;" -uroot -proot
        mysql -e "SET @@GLOBAL.GTID_MODE = OFF_PERMISSIVE;" -uroot -proot
        mysql -e "SET @@GLOBAL.GTID_MODE = ON_PERMISSIVE;" -uroot -proot
        mysql -e "SET @@GLOBAL.GTID_MODE = ON;" -uroot -proot
        mysql -e "PURGE BINARY LOGS BEFORE now();" -uroot -proot
    
    - name: Install Rust target for wasm
      run: |
        rustup target add wasm32-wasi
        
    - name: Install WasmEdge
      run: |
        VERSION=0.11.2
        curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | sudo bash -s -- -e all --version=$VERSION -p /usr/local
    
    - name: Install and init dapr
      run: |
        wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash
        dapr init

    - name: Start dapr sentry service
      run: |
        mkdir -p .dapr/certs
        wget https://github.com/dapr/dapr/releases/download/v1.8.4/sentry_linux_amd64.tar.gz
        tar -zxvf sentry_linux_amd64.tar.gz
        nohup ./sentry --issuer-credentials .dapr/certs --trust-domain cluster.local &

    - name: sales_tax_rate
      run: |
        cd sales_tax_rate
        cargo build --target wasm32-wasi --release
        wasmedgec target/wasm32-wasi/release/sales_tax_rate_lookup.wasm sales_tax_rate_lookup.wasm
        nohup dapr run --app-id rate-service --app-protocol http --app-port 8001 --dapr-http-port 3501 --components-path ../config --log-level debug wasmedge sales_tax_rate_lookup.wasm > server.log 2>&1 &

    - name: order_management
      run: |
        cd order_management
        cargo build --target wasm32-wasi --release
        wasmedgec target/wasm32-wasi/release/order_management.wasm order_management.wasm
        nohup dapr run --app-id order-service --app-protocol http --app-port 8003 --dapr-http-port 3503 --components-path ../config --log-level debug wasmedge order_management.wasm > server.log 2>&1 &

    # - name: pretest
    # run: |
    # sleep 15
    # curl http://localhost:3503/v1.0/secrets/local-store/APP_URL:DATABASE

    - name: test
      run: |
        sleep 15
        resp=$(curl http://localhost:8003/init)
        echo "$resp"
        if [[ $resp == *"true"* ]]; then
          echo -e "Execution Success!"
        else
          echo -e "Execution Fail!"
          exit 1
        fi
        resp=$(curl http://localhost:8003/create_order -X POST -d @order.json)
        echo "$resp"
        if [[ $resp == *"27.15"* ]]; then
          echo -e "Execution Success!"
        else
          echo -e "Execution Fail!"
          exit 1
        fi
        resp=$(curl http://localhost:8003/orders)
        echo "$resp"
        if [[ $resp == *"27.15"* ]]; then
          echo -e "Execution Success!"
        else
          echo -e "Execution Fail!"
          exit 1
        fi
      continue-on-error: true

    - name: Dump the rate server log
      run: |
        cd sales_tax_rate
        cat server.log

    - name: Dump the order server log
      run: |
        cd order_management
        cat server.log
